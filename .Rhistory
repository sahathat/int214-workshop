install.packages("DescTool")
install.packages("DescTools")
("MASS")
install.packages("MASS")
library(MASS)
library(DescTools)
cats <- cats
View(cats)
View(cats)
View(cats)
View(cats)
View(cats)
View(cats)
View(cats)
View(cats)
View(cats)
# find median of body weighted in kg and heart weighted in g
median(cats$Bwt)
median(cats$Hwt)
# 1. find mean
mean(cats$Bwt)
mean(cats$Hwt)
# 3. the most of gender cat is
factor(cats$Sex)
table(cats$Sex)
# 4. standard deviation of body weighted in kg and heart weighted in g
sd(cats$Bwt)
sd(cats$Hwt)
# 5. Who have coefficient of variation be better? between body weight and heart weight
cv(cats$Bwt) #
# 4. population standard deviation of body weighted in kg and heart weighted in g
sd(cats$Bwt) #
sd(cats$Hwt) #
median(cats$Hwt)
# 2. find median of body weighted in kg and heart weighted in g
median(cats$Bwt) #
# 1. find mean of body weighted in kg and heart weighted in g
mean(cats$Bwt) #
mean(cats$Hwt) #
# 5. Who have coefficient of variation be better? between body weight and heart weight
cvBwt <- sd(cats$Bwt)/mean(cats$Bwt) #
print(cvBwt) #
cvHwt <- sd(cats$Hwt)/mean(cats$Hwt)
print(cvHwt) #
survey <- survey
View(survey)
View(survey)
View(survey)
# 1. servey the counting of woman who never smoking
table(survey$Sex[survey$Sex == 'F'],survey$Smoke[ survey$Smoke == 'Never'])
# 1. servey the counting of woman who never smoking
table(survey$Sex[survey$Sex == 'Female'],survey$Smoke[ survey$Smoke == 'Never'])
)
# 1. servey the counting of woman who never smoking
data <- data.frame(survey$Sex[survey$Sex == 'Female'],survey$Smoke[ survey$Smoke == 'Never'])
# 1. servey the counting of woman who never smoking
data <- data.frame(survey$sex = survey$Sex[survey$Sex == 'Female'],survey$smoke = survey$Smoke[ survey$Smoke == 'Never'])
# 1. servey the counting of woman who never smoking
data <- data.frame(survey$Sex[survey$Sex == 'Female'],survey$Smoke[ survey$Smoke == 'Never'])
# 1. servey the counting of woman who never smoking
data <- data.frame(survey[survey$Sex == 'Female' && survey$Smoke == 'Never'])
table(data)
View(data)
# 1. servey the counting of woman who never smoking
count(survey)
# 1. servey the counting of woman who never smoking
count(survey$Sex)
# 1. servey the counting of woman who never smoking
length(survey$Sex)
# 1. servey the counting of woman who never smoking
length(survey[survey$Sex == 'Female' && survey == 'Never'])
# 2. find average height of male gender and female gender
mean(survey$Sex[survey$Sex == 'Male'])
# 1. servey the counting of woman who never smoking
sum(survey$Sex == 'Female', na.rm = TRUE)
# 1. servey the counting of woman who never smoking
sum(survey$Sex == 'Female' && survey$Smoke == 'Never', na.rm = TRUE)
# 1. servey the counting of woman who never smoking
sum(survey$Sex == 'Female', na.rm = TRUE)
sum(survey$Smoke == 'Never', na.rm = TRUE)
# 1. servey the counting of woman who never smoking
a <- sum(survey$Sex == 'Female', na.rm = TRUE)
b <- sum(survey$Smoke == 'Never', na.rm = TRUE)
aub <- length(survey)
print(a+b-aub)
aub <- length(survey$Sex)
print(a+b-aub)
# use condition operation
sum(survey$Sex[survey$Smoke == 'Never'] == 'Female', na.rm = TRUE)
# use set operation
a <- sum(survey$Sex == 'Female', na.rm = TRUE) #
b <- sum(survey$Smoke == 'Never', na.rm = TRUE) #
aub <- length(survey$Sex) #
View(survey)
# use set operation
a <- sum(survey$Sex == 'Male', na.rm = TRUE) # female 118 male
# use set operation
a <- sum(survey$Sex == 'Male', na.rm = TRUE) # female 118 male
# 2. find average height of male
sum(survey$Sex == 'Male', na.rm = TRUE)
b <- sum(survey$Smoke == 'Never', na.rm = FALSE) # never smoke 189
b <- sum(survey$Smoke == 'Never', na.rm = TRUE) # never smoke 189
# 2. find height mean of male and female
mean(survey$Height[survey$Sex == 'Male'],na.rm = TRUE) #
mean(survey$Height[survey$Sex == 'Female'],na.rm = TRUE) #
# 3. find height median of male and female
median(survey$Height[survey$Sex == 'Male'],na.rm = TRUE) #
median(survey$Height[survey$Sex == 'Female'],na.rm = TRUE) #
install.packages("DescTools")
install.packages("MASS")
library(DescTools)
library(MASS)
# 4. find height mode of male and female
Mode(survey$Height[survey$Sex == 'Male'],na.rm = TRUE) #
Mode(survey$Height[survey$Sex == 'Female'],na.rm = TRUE) #
# 5. find name of clap and exercise of the most count and show the count of them
fact <- factor(servey$Clap)
# 5. find name of clap and exercise of the most count and show the count of them
fact <- factor(survey$Clap)
Mode(fact)
Mode(survey$Clap)
# 5. find name of clap and exercise of the most count and show the count of them
factor(survey$Clap)
Mode(sum(survey$Clap , na.rm = TRUE))
# 5. find name of clap and exercise of the most count and show the count of them
factClap <- factor(survey$Clap)
summary(fact)
Mode(summary(fact))
Mode(summary(fact) , na.rm = TRUE)
Mode(summary(fact))
Mode(factClap)
summary(factClap) # right 147
summary(factExer)
factExer <- factor(survey$Exer)
summary(factExer)
factCatSex <- factor(cats$Sex)
summary(factCatSex)
# and replace by string with ₹+amount with mutate
# discount price
Udemy <- Udemy %>% mutate(discount_price__price_string=splice(discount_price__currency,discount_price__amount))
# Explore data
glimpse(Udemy)
library(dplyr)
library(readr)
library(stringr)
library(DescTools)
library(assertive)
# Explore data
glimpse(Udemy)
Udemy <- read.csv("https://raw.githubusercontent.com/sit-2021-int214/031-Finance-Accounting-Courses---Udemy-13K-course-/main/assignment/data/udemy_output_All_Finance__Accounting_p1_p626.csv")
# Explore data
glimpse(Udemy)
# check data type of Udemy
glimpse(Udemy)
# by id is duplicate
Udemy$id %>% duplicated() %>% sum()
# When amount price of course aren't show in table should replace by o
# discount price
Udemy$discount_price__amount <- replace(Udemy$discount_price__amount,is.na(Udemy$discount_price__amount), 0)
# price detail
Udemy$price_detail__amount <- replace(Udemy$price_detail__amount,is.na(Udemy$price_detail__amount), 0)
# When currency price of course aren't show in table should replace by INR
# discount price
Udemy$discount_price__currency <- replace(Udemy$discount_price__currency,Udemy$discount_price__currency=="", "INR")
# detail of price
Udemy$price_detail__amount <- replace(Udemy$price_detail__amount,Udemy$price_detail__amount=="", "INR")
# and replace by string with ₹+amount with mutate
# discount price
Udemy <- Udemy %>% mutate(discount_price__price_string=paste(discount_price__currency,discount_price__amount))
# note your can't use character plus character by character + character but can use paste(x1,x2,...,(collapse="-")[optional])
# price detail
Udemy <- Udemy %>% mutate(price_detail__price_string=paste(discount_price__currency,price_detail__amount))
inputs <- list(arg1 = "a", arg2 = "b")
# splice() concatenates the elements of inputs with arg3
splice(inputs, arg3 = c("c1", "c2")) %>% str()#> List of 3
library(dplyr)
library(readr)
library(stringr)
library(DescTools)
library(assertive)
# splice() concatenates the elements of inputs with arg3
splice(inputs, arg3 = c("c1", "c2")) %>% str()#> List of 3
library(tidyverse)
# splice() concatenates the elements of inputs with arg3
splice(inputs, arg3 = c("c1", "c2")) %>% str()#> List of 3
#>  $ arg1: chr "a"
#>  $ arg2: chr "b"
#>  $ arg3: chr [1:2] "c1" "c2"
list(inputs, arg3 = c("c1", "c2")) %>% str()#> List of 2
#>  $     :List of 2
#>   ..$ arg1: chr "a"
#>   ..$ arg2: chr "b"
#>  $ arg3: chr [1:2] "c1" "c2"
c(inputs, arg3 = c("c1", "c2")) %>% str()#> List of 4
Udemy <- read.csv("https://raw.githubusercontent.com/sit-2021-int214/031-Finance-Accounting-Courses---Udemy-13K-course-/main/assignment/data/udemy_output_All_Finance__Accounting_p1_p626.csv")
# Explore data
glimpse(Udemy) #data of Udemy have 13608 rows and 20 columns by each columns have
library(dplyr)
# Explore data
glimpse(Udemy) #data of Udemy have 13608 rows and 20 columns by each columns have
# check data type of Udemy
glimpse(Udemy)
Udemy <- read.csv("https://raw.githubusercontent.com/sit-2021-int214/031-Finance-Accounting-Courses---Udemy-13K-course-/main/assignment/data/udemy_output_All_Finance__Accounting_p1_p626.csv")
View(Udemy)
# check data type of Udemy
glimpse(Udemy)
library(dplyr)
library(readr)
# Sample Data
sample(1:5, 3)
# Sample n rows from a table
mtcars %>% sample_n(2)
sample(1:5, 3,replace = True)
sample(1:5, 3,replace = T)
sample(1:5, 3,replace = T)
# Sample Data by 1-5 have show by 3 numbers
sample(1:5, 3)
sample(1:5, 3,replace = T)
sample(1:5, 5,replace = F)
sample(1:5, 5,replace = T)
# Generated Random Data with Normal Distribution
population_1 <- rnorm(20, mean=65, sd=3.5)
population_1
mtcars
# Sample n rows from a table
mtcars %>% sample_n(2)
# Sample Data
sample_1 <- sample(population_1 , 3)
sample_1
starwars %>% select(height) %>% summarise(avg_height=mean(height,na.rm=TRUE))
mean(starwars$height)
mean(starwars$height,na.rm=TRUE)
starwars %>% select(avg_height=mean(height,na.rm=TRUE))
starwars %>% filter(sex=="male") %>% summarise(avg_height=mean(height,na.rm=TRUE))
mean(starwars$height[sex=="male"],na.rm=TRUE)
mean(starwars$height[starwars$sex=="male"],na.rm=TRUE)
# Example Proportion of male
i <- starwars %>% filter(sex=="male") %>% count() %>% pull()
n <- starwars %>% count() %>% pull()
p <- i/n
p
i
n
# pull sample
starwars %>% pull(height, name)
# pull sample
starwars %>% pull(height) #pull for each column by return to vector value
# pull sample
starwars %>% pull(height, name) #pull for each column by return to vector value
# normal distribution
pnorm(x, xbar, sd)
# Finding Z
x <- 12
xbar <- 10
sd <- 1
z <- (x-xbar)/sd
z
# normal distribution
pnorm(x, xbar, sd)
dnorm(x, mean, sd) #use in case cumulative = False
dnorm(x, xbar, sd) #use in case cumulative = False
qnorm(prob, mean = 0, sd = 1, lower.tail = TRUE)
prob <- 0.5
qnorm(prob, mean = 0, sd = 1, lower.tail = TRUE)
qnorm(prob, mean = 10, sd = 1, lower.tail = TRUE)
qnorm(prob, mean = 10, sd = 1, lower.tail = TRUE)
prob <- 0.4
qnorm(prob, mean = 10, sd = 1, lower.tail = TRUE)
qnorm(prob, mean = 10, sd = 1, lower.tail = FALSE) #
qnorm(0.6, mean = 10, sd = 1, lower.tail = FALSE) # 10.25335
# T distribution
# note df = degree of freedom = n-1 if hypothesis 1 pop
# Find t-value
xt <- 12
meant <- 10
st <- 1
n <- 10
nt <- 10
sderror <- (st/sqrt(nt))
t <- (xt-meant)/sderror
df <- nt - 1
pt(t, df,lower.tail = TRUE)
# Inverse T distribution
p <- 0.9
qt(p, df, lower.tail = TRUE) #
t
sderror
# Step 3: Test statistic
z <- (xbar - u0) / (sd/sqrt(n));
u0 <- 3
# Step 2: Level of significance
alpha <- 0.01
# Step 3: Test statistic
z <- (xbar - u0) / (sd/sqrt(n));
z #
# Step 4: Finding P-value approach or Critical Value approach
# P-value approach
pvalue <- pnorm(z); pvalue
# Step 4: Finding P-value approach or Critical Value approach
# P-value approach
pvalue <- 1-pnorm(z); pvalue
# Step 3: Test statistic
z <- (xbar - u0) / (sd/sqrt(n)); z # 22.13594
# typecurve = lower tail
# Critical Value approach
zalpha <- qnorm(alpha); zalpha
# Step 3: Test statistic
sderror <- (sd/sqrt(n))
# Step 3: Test statistic
sderror <- (sd/sqrt(n)); sderror
z <- (xbar - u0) / sderror; z #
z <- (xbar - u0) / sderror;
z
(xbar - u0)
xbar <- 2.92
z <- (xbar - u0) / sderror; z #
sd <- 0.18
# Step 0: Assign variables
n <- 36
# Step 3: Test statistic
sderror <- (sd/sqrt(n)); sderror # 0.3162278
# Step 0: Assign variables
n <- 36
# Step 3: Test statistic
sderror <- (sd/sqrt(n)); sderror # 0.03
z <- (xbar - u0) / sderror; z #
# Step 4: Finding P-value approach or Critical Value approach
# P-value approach
pvalue <- 1-pnorm(z); pvalue #
# Step 4: Finding P-value approach or Critical Value approach
# P-value approach
pvalue <- pnorm(z); pvalue #
# Step 5: Compare
# Using p-value approach
if(pvalue<=alpha){
print("Reject H0")
}else{
print("Accept H0")
}
# Using critical value
if(z<=zalpha){
print("Reject H0")
}else{
print("Accept H0")
}
setwd("E:/SQL/INT205/week14")
install.packages("rmarkdown")
library(rmarkdown)
setwd("E:/R_language/INT214/workshop2/int214-workshop")
int214 <- read_csv("db_int214.csv")
int214 <- read_csv("db_int214.csv")
library(readr)
library(dplyr)
library(ggplot2)
library(rmarkdown)
int214 <- read_csv("db_int214.csv")
int214 %>% glimpse()
int214 <- read_csv("db_int214.csv")
int214 <- read_csv("db_INT214.csv")
library(readr)
library(dplyr)
library(ggplot2)
library(rmarkdown)
int214 <- read_csv("db_INT214.csv")
setwd("E:/R_language/INT214/workshop2/int214-workshop")
int214 <- read_csv("db_INT214.csv")
int214 %>% glimpse()
